<?xml version="1.0" encoding="UTF-8"?>
<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- Copyright (C) 2022 OKTET Labs Ltd. All rights reserved. -->
<test name="rss" type="package">
  <objective>RSS tests</objective>
  <notes/>
  <iter result="PASSED">
    <notes/>
    <test name="prologue" type="script">
      <objective/>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
        <results tags="virtio-pci" key="NO-RSS" notes="VirtIO net does not support RSS">
          <result value="SKIPPED">
            <verdict>RSS is not supported for IUT interface</verdict>
          </result>
        </results>
        <results tags="ice&amp;linux-mm&lt;506" key="RSS-BROKEN" notes="ice driver progrmas HW filtering table since Linux 5.6">
          <result value="FAILED">
            <verdict>Cannot detect Toeplitz hash variant</verdict>
          </result>
        </results>
        <results tags="mlx5_core" key="MLX5-SYM-TOEPLITZ" notes="Mellanox uses nonstandard Toeplitz hash algorithm">
          <result value="PASSED">
            <verdict>NIC uses symmetric-or-xor Toeplitz hash</verdict>
          </result>
        </results>
        <results tags="xilinx_efct" key="X3-1288" notes="X3 net does not support RSS">
          <result value="SKIPPED">
            <verdict>There is no multiple indirection table entries</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="epilogue" type="script">
      <objective/>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="hash_key_get" type="script">
      <objective>Get RSS hash key, check that packets are directed to receive queues according to its value.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="hash_key_set" type="script">
      <objective>Check that RSS hash key change can result in changing of Rx queue which processes packets of a given connection.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="indir_table_set" type="script">
      <objective>Check that a record of RSS hash indirection table can be changed to specify another Rx queue and the new queue will then be used for an existing connection whose hash is mapped to that table record.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="rx_rule_tcp_udp" type="script">
      <objective>Check that Rx classification rule can redirect matching TCP/UDP traffic to a different Rx queue.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="match_src"/>
        <arg name="match_dst"/>
        <arg name="location">first</arg>
        <notes/>
        <results tags="sfc" key="RX-RULE-NO-FIRST-LOC" notes="RX_CLS_LOC_FIRST is not supported">
          <result value="FAILED">
            <verdict>Failed to add Rx rule: TA_UNIX-EINVAL</verdict>
          </result>
        </results>
        <results tags="i40e|ice|mlx5_core" key="RX-RULE-NO-SPEC-LOC">
          <result value="SKIPPED">
            <verdict>Special insert locations are not supported for Rx rules</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="match_src"/>
        <arg name="match_dst"/>
        <arg name="location">last</arg>
        <notes/>
        <results tags="sfc" key="RX-RULE-NO-LAST-LOC" notes="RX_CLS_LOC_LAST is not supported">
          <result value="FAILED">
            <verdict>Failed to add Rx rule: TA_UNIX-EINVAL</verdict>
          </result>
        </results>
        <results tags="i40e|ice|mlx5_core" key="RX-RULE-NO-SPEC-LOC">
          <result value="SKIPPED">
            <verdict>Special insert locations are not supported for Rx rules</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="match_src"/>
        <arg name="match_dst">TRUE</arg>
        <arg name="location">any</arg>
        <notes/>
        <results tags="i40e|ice|mlx5_core" key="RX-RULE-NO-SPEC-LOC">
          <result value="SKIPPED">
            <verdict>Special insert locations are not supported for Rx rules</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="match_src"/>
        <arg name="match_dst"/>
        <arg name="location">specific</arg>
        <notes/>
        <results tags="sfc" key="RX-RULE-NO-SET-LOC" notes="User cannot choose location for a rule">
          <result value="FAILED">
            <verdict>Failed to add Rx rule: TA_UNIX-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="match_src"/>
        <arg name="match_dst">FALSE</arg>
        <arg name="location">any</arg>
        <notes/>
        <results tags="sfc" key="RX-RULE-NO-WIDLCARD-DST" notes="Rx rule must specify destination address/port">
          <result value="FAILED">
            <verdict>Failed to add Rx rule: TA_UNIX-EPROTONOSUPPORT</verdict>
          </result>
        </results>
        <results tags="i40e|ice|mlx5_core" key="RX-RULE-NO-SPEC-LOC">
          <result value="SKIPPED">
            <verdict>Special insert locations are not supported for Rx rules</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="rx_rules_full_part" type="script">
      <objective>Check what happens when there are two TCP or UDP Rx rules - one specifying both source and destination and another one specifying only source or destination.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="first_partial"/>
        <arg name="partial_src">FALSE</arg>
        <notes/>
        <results tags="ice|i40e" key="RX-RULE-NO-TWO-SIMILAR" notes="Intel NICs do not support adding two rules of the same type">
          <result value="FAILED">
            <verdict>Failed to add the second Rx rule: TA_UNIX-EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="first_partial">FALSE</arg>
        <arg name="partial_src">TRUE</arg>
        <notes/>
        <results tags="sfc" key="RX-RULE-NO-WIDLCARD-DST" notes="Rx rule must specify destination address/port">
          <result value="FAILED">
            <verdict>Failed to add the second Rx rule: TA_UNIX-EPROTONOSUPPORT</verdict>
          </result>
        </results>
        <results tags="ice|i40e" key="RX-RULE-NO-TWO-SIMILAR" notes="Intel NICs do not support adding two rules of the same type">
          <result value="FAILED">
            <verdict>Failed to add the second Rx rule: TA_UNIX-EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="first_partial">TRUE</arg>
        <arg name="partial_src">TRUE</arg>
        <notes/>
        <results tags="sfc" key="RX-RULE-NO-WIDLCARD-DST" notes="Rx rule must specify destination address/port">
          <result value="FAILED">
            <verdict>Failed to add the first Rx rule: TA_UNIX-EPROTONOSUPPORT</verdict>
          </result>
        </results>
        <results tags="ice|i40e" key="RX-RULE-NO-TWO-SIMILAR" notes="Intel NICs do not support adding two rules of the same type">
          <result value="FAILED">
            <verdict>Failed to add the second Rx rule: TA_UNIX-EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="change_channels" type="script">
      <objective>Change number of combined channels and check that RSS indirection table works as expected after that.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="two_power"/>
        <notes/>
      </iter>
    </test>
    <test name="af_xdp" type="script">
      <objective>Check that AF_XDP sockets can receive and send packets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="copy_mode"/>
        <notes/>
      </iter>
    </test>
    <test name="af_xdp_rx_rule" type="script">
      <objective>Check that a packet directed to Rx queue by Rx classification rule can be received and replied by AF_XDP socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="copy_mode"/>
        <notes/>
      </iter>
    </test>
  </iter>
</test>
